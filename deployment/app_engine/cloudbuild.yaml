steps:
  - id: Copy requirements.txt to root of directory for app engine to see
    name: "ubuntu"
    entrypoint: "cp"
    args:
      [
        "/workspace/requirements/requirements.txt",
        "/workspace/requirements.txt",
      ]
    timeout: "1600s"

  - id: Copy app engine modules to root of directory for app engine to see
    name: "ubuntu"
    entrypoint: "cp"
    args: ["-a", "/workspace/deployment/app_engine/.", "/workspace/"]
    timeout: "1600s"

  - id: "Validate the workspace looks right"
    name: ubuntu
    args: ["ls", "-lah", "/workspace/"]

  - id: "Default App Engine Deploy"
    name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "$_DEPLOY_YAML_FILE"]
    timeout: "1600s"

  - id: "django_migrate service App Engine Deploy"
    name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "/workspace/django_migrate.yaml"]
    timeout: "1600s"

  - id: "Run django migrate"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - '-c'
      - |
        curl $(gcloud app services browse django-migrate --no-launch-browser --format='value(url)')

  - id: "django_createsuperuser service App Engine Deploy"
    name: "gcr.io/cloud-builders/gcloud"
    args: ["app", "deploy", "/workspace/django_createsuperuser.yaml"]
    timeout: "1600s"

  - id: "Run django createsuperuser"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - '-c'
      - |
        curl $(gcloud app services browse django-createsuperuser --no-launch-browser --format='value(url)')
    timeout: "1600s"

  - id: "Remove elder app versions"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - '-c'
      - |
        for service in default django-migrate django-createsuperuser; do
        versions=$(gcloud app versions list --service "$service" --sort-by '~VERSION.ID' --format 'value(VERSION.ID)' | sed 1,15d)
        && for version in $versions; do gcloud app versions delete "$version" --service "$service" --quiet; done; done
    timeout: "600s"

timeout: "1600s"

  # disable until we get it working - need asgi
  # - id: "celery-beat service App Engine Deploy"
  #   name: "gcr.io/cloud-builders/gcloud"
  #   args: ["app", "deploy", "/workspace/celery_beat.yaml"]
  #   timeout: "1600s"

  # - id: "celery-worker service App Engine Deploy"
  #   name: "gcr.io/cloud-builders/gcloud"
  #   args: ["app", "deploy", "/workspace/celery_worker.yaml"]
  #   timeout: "1600s"
