# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: peerlogic-api-env

---
apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-database
spec:
  template:
    spec:
      containers:
      - name: migrate-database
        image: gcr.io/peerlogic-api-stage/peerlogic-api
        command: ["python", "manage.py", "migrate"]
        env:
            # [START cloudsql_secrets]
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_USER
            - name: POSTGRES_PEERLOGIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_PEERLOGIC_PASSWORD
            # [END cloudsql_secrets]
            # [START peerlogic_secrets]
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: DJANGO_SECRET_KEY
            # [END peerlogic_secrets]
            # [START netsapiens_secrets]
            - name: NETSAPIENS_BASE_URL
              value: 'https://core1-phx.peerlogic.com/ns-api'
            - name: NETSAPIENS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: project_id
            # [START netsapiens_secrets]
            - name: NETSAPIENS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_CLIENT_SECRET
            - name: NETSAPIENS_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_USERNAME
            - name: NETSAPIENS_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_PASSWORD
            # [START netsapiens_secrets]
            - name: DJANGO_DB_REQUIRE_SSL
              value: "False"
            - name: DJANGO_EMAIL_BACKEND
              value: django.core.mail.backends.console.EmailBackend
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: DJANGO_DEBUG
              value: "False"
            - name: GKE_APPLICATION
              value: "True"
            - name: DB_HOST
              value: "$(CLOUDSQL_SERVICE_HOST)"
        ports:
        - containerPort: 8080
      restartPolicy: Never
  backoffLimit: 4

---
# [START kubernetes_deployment]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peerlogic-api
  labels:
    app: peerlogic-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: peerlogic-api
  template:
    metadata:
      labels:
        app: peerlogic-api
    spec:
      containers:
      - name: peerlogic-api
        image: gcr.io/peerlogic-api-stage/peerlogic-api
        readinessProbe:
          httpGet:
            path: /admin/login/?next=/admin/core/client/
            port: 8080
        env:
            # [START cloudsql_secrets]
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_USER
            - name: POSTGRES_PEERLOGIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_PEERLOGIC_PASSWORD
            # [END cloudsql_secrets]
            # [START peerlogic_secrets]
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: DJANGO_SECRET_KEY
            # [END peerlogic_secrets]
            # [START netsapiens_secrets]
            - name: NETSAPIENS_BASE_URL
              value: 'https://core1-phx.peerlogic.com/ns-api'
            - name: NETSAPIENS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: project_id
            # [START netsapiens_secrets]
            - name: NETSAPIENS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_CLIENT_SECRET
            - name: NETSAPIENS_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_USERNAME
            - name: NETSAPIENS_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_PASSWORD
            # [START netsapiens_secrets]
            - name: DJANGO_DB_REQUIRE_SSL
              value: "False"
            - name: DJANGO_EMAIL_BACKEND
              value: django.core.mail.backends.console.EmailBackend
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: DJANGO_DEBUG
              value: "False"
            - name: GKE_APPLICATION
              value: "True"
            - name: DB_HOST
              value: "$(CLOUDSQL_SERVICE_HOST)"
        ports:
        - containerPort: 8080
      - name: peerlogic-celery-worker
        command: ["celery", "-A", "peerlogic", "worker", "-l", "INFO"]
        image: gcr.io/peerlogic-api-stage/peerlogic-api
        env:
            # [START cloudsql_secrets]
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_USER
            - name: POSTGRES_PEERLOGIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_PEERLOGIC_PASSWORD
            # [END cloudsql_secrets]
            # [START peerlogic_secrets]
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: DJANGO_SECRET_KEY
            # [END peerlogic_secrets]
            - name: NETSAPIENS_BASE_URL
              value: 'https://core1-phx.peerlogic.com/ns-api'
            - name: NETSAPIENS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: project_id
            # [START netsapiens_secrets]
            - name: NETSAPIENS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_CLIENT_SECRET
            - name: NETSAPIENS_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_USERNAME
            - name: NETSAPIENS_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_PASSWORD
            # [END netsapiens_secrets]
            - name: DJANGO_DB_REQUIRE_SSL
              value: "False"
            - name: DJANGO_EMAIL_BACKEND
              value: django.core.mail.backends.console.EmailBackend
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: DJANGO_DEBUG
              value: "False"
            - name: GKE_APPLICATION
              value: "True"
            - name: DB_HOST
              value: "$(CLOUDSQL_SERVICE_HOST)"
      - name: peerlogic-celery-beat
        command: ["celery", "-A", "peerlogic", "beat", "-l", "INFO", "-S", "django_celery_beat.schedulers:DatabaseScheduler"]
        image: gcr.io/peerlogic-api-stage/peerlogic-api
        env:
            # [START cloudsql_secrets]
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_USER
            - name: POSTGRES_PEERLOGIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: POSTGRES_PEERLOGIC_PASSWORD
            # [END cloudsql_secrets]
            # [START peerlogic_secrets]
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: DJANGO_SECRET_KEY
            # [END peerlogic_secrets]
            - name: NETSAPIENS_BASE_URL
              value: 'https://core1-phx.peerlogic.com/ns-api'
            - name: NETSAPIENS_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: project_id
            # [START netsapiens_secrets]
            - name: NETSAPIENS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_CLIENT_SECRET
            - name: NETSAPIENS_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_USERNAME
            - name: NETSAPIENS_API_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: netsapiens
                  key: NETSAPIENS_API_PASSWORD
            # [END netsapiens_secrets]
            - name: DJANGO_DB_REQUIRE_SSL
              value: "False"
            - name: DJANGO_EMAIL_BACKEND
              value: django.core.mail.backends.console.EmailBackend
            - name: CELERY_BROKER_URL
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: peerlogic-api-env
                  key: redis_url
            - name: DJANGO_DEBUG
              value: "False"
            - name: GKE_APPLICATION
              value: "True"
            - name: DB_HOST
              value: "$(CLOUDSQL_SERVICE_HOST)"
# [END kubernetes_deployment]

---

# [START service]
# The peerlogic-api service provides a load-balancing proxy over the peerlogic-api app
# pods. By specifying the type as a 'LoadBalancer', Container Engine will
# create an external HTTP load balancer.
# For more information about Services see:
#   https://cloud.google.com/container-engine/docs/services/
# For more information about external HTTP load balancing see:
#   https://cloud.google.com/container-engine/docs/load-balancer
apiVersion: v1
kind: Service
metadata:
  name: peerlogic-api
  namespace: default
  labels:
    app: peerlogic-api
spec:
  type: NodePort
  selector:
    app: peerlogic-api
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
# [END service]





