# Generated by Django 3.2.14 on 2022-08-11 23:13

from django.db import migrations
import django.contrib.postgres.indexes


class Migration(migrations.Migration):

    dependencies = [
        ('calls', '0045_transcript_text_with_gin_index'),
    ]

    operations = [
        migrations.AddIndex(
            model_name='calltranscript',
            index=django.contrib.postgres.indexes.GinIndex(fields=['transcript_text_tsvector'], name='calls_callt_transcr_ece2a1_gin'),
        ),

        migrations.RunSQL(
            sql='''
              CREATE TRIGGER transcript_text_tsvector_trigger
              BEFORE INSERT OR UPDATE OF transcript_text, transcript_text_tsvector
              ON calls_calltranscript
              FOR EACH ROW EXECUTE PROCEDURE
              tsvector_update_trigger(
                transcript_text_tsvector, 'pg_catalog.english', transcript_text
              );

              UPDATE calls_calltranscript SET transcript_text_tsvector = NULL;
            ''',

            reverse_sql = '''
              DROP TRIGGER IF EXISTS transcript_text_tsvector
              ON film;
            '''
        ),
        # THE BELOW IS THE PREFERRED WAY TO DO IT BUT COULD ONLY POSSIBLY WORK IF ALTER COLUMN WERE AN OPERATION WE COULD
        # PERFORM.
        # migrations.RunSQL(
        #     sql='''
        #       ALTER TABLE calltranscript ADD COLUMN transcript_text_tsvector SET DATA TYPE tsvector GENERATED ALWAYS AS (
        #         setweight(to_tsvector('english', coalesce(transcript_text, '')), 'A')
        #       ) STORED;
        #     ''',
        #     reverse_sql = '''
        #       ALTER TABLE film DROP COLUMN transcript_text_tsvector;
        #     '''
        # ),
    ]
