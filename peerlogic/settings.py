"""
Django settings for peerlogic project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
import requests
from requests.auth import HTTPBasicAuth
from pathlib import Path

from dotenv import load_dotenv


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DJANGO_DEBUG", "True") == "True"

if DEBUG:
    load_dotenv()


PROJECT_ID = os.getenv("PROJECT_ID", "peerlogic-api-dev")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

ALLOWED_HOSTS = ["127.0.0.1", "localhost", os.getenv("DJANGO_ALLOWED_HOSTS", "*")]
DB_HOST = os.getenv("DB_HOST", "127.0.0.1")
if os.getenv("GKE_APPLICATION", False) == "True":
    ALLOWED_HOSTS.append(os.getenv("KUBERNETES_SERVICE_HOST"))

# Bandwidth
BANDWIDTH_APPLICATION_ID = os.getenv("BANDWIDTH_APPLICATION_ID")
BANDWIDTH_MESSAGING_URI = os.getenv("BANDWIDTH_MESSAGING_URI")
BANDWIDTH_API_USERNAME = os.getenv("BANDWIDTH_API_USERNAME")
BANDWIDTH_API_PASSWORD = os.getenv("BANDWIDTH_API_PASSWORD")
BANDWIDTH_CLIENT = requests.Session()
BANDWIDTH_CLIENT.auth = HTTPBasicAuth(BANDWIDTH_API_USERNAME, BANDWIDTH_API_PASSWORD)

# Netsapiens Communications Info
NETSAPIENS_CLIENT_ID = os.getenv("NETSAPIENS_CLIENT_ID")
NETSAPIENS_CLIENT_SECRET = os.getenv("NETSAPIENS_CLIENT_SECRET")
NETSAPIENS_BASE_URL = os.getenv("NETSAPIENS_BASE_URL")
NETSAPIENS_ACCESS_TOKEN_URL = os.getenv("NETSAPIENS_ACCESS_TOKEN_URL")
NETSAPIENS_INTROSPECT_TOKEN_URL = os.getenv("NETSAPIENS_INTROSPECT_TOKEN_URL")
NETSAPIENS_API_USERNAME = os.getenv("NETSAPIENS_API_USERNAME")
NETSAPIENS_API_PASSWORD = os.getenv("NETSAPIENS_API_PASSWORD")

# Twilio API CNAM / Phone Lookup Support
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_IS_ENABLED = os.getenv("TWILIO_IS_ENABLED", "False").lower() in ("true", "1", "t")

TWILIO_REFETCH_IN_SECONDS_DEFAULT = 60  # 60 * 60 * 24 * 365  # seconds in a year
try:
    TWILIO_REFETCH_IN_SECONDS = int(os.getenv("TWILIO_REFETCH_IN_SECONDS"))
except (ValueError, TypeError) as error:
    # TODO log this recoverable configuration error
    TWILIO_REFETCH_IN_SECONDS = TWILIO_REFETCH_IN_SECONDS_DEFAULT

# CORS
CORS_ORIGIN_ALLOW_ALL = DEBUG
CORS_ORIGIN_WHITELIST = ("http://localhost:3000", "app://.")

# DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "core.User"


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_extensions",
    "django_celery_beat",
    "phonenumber_field",
    "corsheaders",
    "core",
    "calls",
    "reminders",
    "inbox",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_userforeignkey.middleware.UserForeignKeyMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "peerlogic.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "peerlogic.wsgi.application"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": ["core.authentication.JSONWebTokenAuthentication"],
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


# [START dbconfig]
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("POSTGRES_USER"),
        "USER": os.getenv("POSTGRES_DB"),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD"),
        "HOST": DB_HOST,
        "PORT": "5432",
    }
}
# [END dbconfig]

# Use a in-memory sqlite3 database when testing in CI systems
if os.getenv("TRAMPOLINE_CI", None):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# [START staticurl]
STATIC_BUCKET_NAME = PROJECT_ID
STATIC_URL = f"https://storage.googleapis.com/{STATIC_BUCKET_NAME}/static/"
# [END staticurl]

STATIC_ROOT = "static/"


# Celery Configuration Options
CELERY_ENABLE_UTC = True
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL", "redis://localhost:6379/0")
CELERY_RESULT_BACKEND = os.getenv("CELERY_RESULT_BACKEND", CELERY_BROKER_URL)

# Admin
X_FRAME_OPTIONS = "SAMEORIGIN"
