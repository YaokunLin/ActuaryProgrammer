version: '3.8'

services:

  postgres:
      image: postgres:13-alpine
      ports:
          - "5432:5432"
      env_file:
          - .env
      volumes:
          - ./volumes/postgres:/var/lib/postgresql
      environment:
          - POSTGRES_PASSWORD=password
          - POSTGRES_USER=peerlogic
          - POSTGRES_DB=peerlogic

#   api:
#       build: .
#       # using runserver for hot reloading, instead of gunicorn
#       command: python3 manage.py runserver 0.0.0.0:8000
#       volumes:
#           - .:/app
#           - .credentials:/root/credentials
#       ports:
#           - 8000:8000
#       depends_on:
#           - postgres
#       env_file:
#           - .env
#       environment:
#           - PORT=8000
#           - WAIT_HOSTS=postgres:5432
#           - WAIT_HOSTS_TIMEOUT=300
#           - WAIT_SLEEP_INTERVAL=30
#           - WAIT_HOST_CONNECT_TIMEOUT=30
#           - DB_HOST=postgres
#           - USE_CLOUD_SQL_AUTH_PROXY=False

  migrate:
      build: .
      command: python3 manage.py migrate
      volumes:
          - .:/app
          - .credentials:/root/credentials
      depends_on:
          - postgres
      env_file:
          - .env
      environment:
          - PORT=8000
          - WAIT_HOSTS=postgres:5432
          - WAIT_HOSTS_TIMEOUT=300
          - WAIT_SLEEP_INTERVAL=30
          - WAIT_HOST_CONNECT_TIMEOUT=30
          - DB_HOST=postgres

  createsuperuser:
      build: .
      command: python3 manage.py createsuperuser --noinput
      volumes:
          - .:/app
          - .credentials:/root/credentials
      depends_on:
          - postgres
      env_file:
          - .env
      environment:
          - PORT=8000
          - WAIT_HOSTS=postgres:5432
          - WAIT_HOSTS_TIMEOUT=300
          - WAIT_SLEEP_INTERVAL=30
          - WAIT_HOST_CONNECT_TIMEOUT=30
          - DB_HOST=postgres

  redis:
    image: redis:6
    ports:
     - 6379:6379

#   worker:
#       build: .
#       command: ["celery", "-A", "peerlogic", "worker", "-l", "INFO"]
#       volumes:
#           - .:/app
#           - .credentials:/root/credentials
#       depends_on:
#           - postgres
#       env_file:
#           - .env
#       environment:
#           - WAIT_HOSTS=postgres:5432
#           - WAIT_HOSTS_TIMEOUT=300
#           - WAIT_SLEEP_INTERVAL=60
#           - WAIT_HOST_CONNECT_TIMEOUT=60
#           - DB_HOST=postgres
#           - USE_CLOUD_SQL_AUTH_PROXY=False
#           - CELERY_BROKER_URL=redis://redis:6379/0
#           - CELERY_RESULT_BACKEND=redis://redis:6379/0

#   beat:
#       build: .
#       command: ["celery", "-A", "peerlogic", "beat", "-l", "INFO", "-S", "django_celery_beat.schedulers:DatabaseScheduler"]
#       volumes:
#           - .:/app
#           - .credentials:/root/credentials
#       depends_on:
#           - postgres
#       env_file:
#           - .env
#       environment:
#           - WAIT_HOSTS=postgres:5432,redis:6379
#           - WAIT_HOSTS_TIMEOUT=300
#           - WAIT_SLEEP_INTERVAL=180
#           - WAIT_HOST_CONNECT_TIMEOUT=180
#           - DB_HOST=postgres
#           - USE_CLOUD_SQL_AUTH_PROXY=False
#           - CELERY_BROKER_URL=redis://redis:6379/0
#           - CELERY_RESULT_BACKEND=redis://redis:6379/0
